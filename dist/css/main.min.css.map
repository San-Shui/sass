{"version":3,"sources":["main.min.css","main.min.scss","_style.scss","_extend.scss","_ifAndFor.scss","_mixin.scss","_function.scss"],"names":[],"mappings":"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","file":"main.min.css","sourcesContent":[null,"// 在引入function.scss之前定义$baseFontSize\r\n$baseFontSize: 25px !default;\r\n/* \r\n*@import的css文件跟普通CSS导入样式文件一样，导入的css文件不会合并到编译后的文件中，\r\n*而是以@import方式存在，生成style.min.css \r\n*/\r\n@import \"../css/style.css\";\r\n// 将@import的scss文件合并进来只生成一个CSS文件main.min.css\r\n@import \"style.scss\";\r\n@import \"mixin.scss\"; // 以后@mixin，%，@function应该全部放在_mixin.scss文件中\r\n@import \"function.scss\";\r\n@import \"extend.scss\";\r\n@import \"ifAndFor.scss\";\r\n\r\n$baseBackground: #0982c1;\r\n$baseTextAlign: center;\r\n\r\n// sass的默认变量仅需要在值后面加上!default\r\n$borderDirection: top !default; \r\n$baseLineHeight: 1.5 !default;\r\n\r\n// 覆盖默认值\r\n$baseLineHeight: 3;\r\n\r\n//特殊变量:#{$variables} 应用于class和属性;\r\n.border-#{$borderDirection} {\r\n  border-#{$borderDirection}: 1px solid #ccc;\r\n}\r\n\r\n//特殊变量:#{$variables} 应用于复杂的属性值\r\nbody {\r\n  font: #{$baseFontSize} / #{$baseLineHeight}\r\n}\r\n\r\n/* 多值变量  list\r\n*list数据可通过空格，逗号或小括号分隔多个值，可用nth($var,$index)取值。\r\n*关于list数据操作还有很多其他函数如length($list)，join($list1,$list2,[$separator])，append($list,$value,[$separator])等 \r\n*/\r\n$marginValue: 12px 15px 18px 20px 22px !default; //第一个值为默认值\r\n$display: block flex inline inline-block inline-flex !default;\r\n$justifyConten: flex-start flex-end center space-between space-around !default;\r\n\r\n/*多值变量 map\r\nmap数据以key和value成对出现，其中value又可以是list。格式为：$map: (key1: value1, key2: value2, key3: value3);\r\n。可通过map-get($map,$key)取值。关于map数据还有很多其他函数如map-merge($map1,$map2)，\r\nmap-keys($map)，map-values($map)等 \r\n*/\r\n$headings: (h1: 2em, h2: 1.5em, h3: 1.2em);\r\n\r\n@include header {\r\n  background: $baseBackground;\r\n  line-height: $baseLineHeight;\r\n  font-size: $baseFontSize;\r\n  display: nth($display, 2);\r\n  justify-content: nth($justifyConten, 3);\r\n  align-content: center;\r\n  .item {\r\n    margin-left: nth($marginValue, 5);\r\n  }\r\n  .text {\r\n    width: 200px;\r\n    line-height: 60px;\r\n    padding-top: 20px;\r\n  }\r\n}\r\n.container {\r\n  padding: 20px 0px;\r\n  background-color: #E2E2E2;\r\n  color: #595B66;\r\n  .title {\r\n    color: #E61C1C;\r\n    @each $header, $size in $headings {\r\n      #{$header} {\r\n        font-size: $size;\r\n        display: nth($display, 4);\r\n        margin-left: nth($marginValue, 5);\r\n        a {\r\n          margin-left: 10px;\r\n          text-decoration: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .aImg {\r\n    display: nth($display, 2);\r\n    justify-content: nth($justifyConten, 3);\r\n    margin: 20px auto;\r\n    border: solid 2px #AAA1A1;\r\n    a{\r\n      display: nth($display, 1);\r\n      padding: 20px;\r\n      width: 260px;\r\n      height: 270px;\r\n      border-radius: 60px;\r\n      margin: 30px auto;\r\n      background-color: #AAA1A1;\r\n    }\r\n    .a1{\r\n      &:hover{ // &表示父元素选择器\r\n        background-color:#FC16CA;\r\n        box-shadow: 10px 10px 6px 5px #8495E9;\r\n        img {\r\n          @include transform(rotate(90deg));\r\n        }\r\n      }\r\n    }\r\n    .a2{\r\n      &:hover{ // &表示父元素选择器\r\n        background-color:#FC16CA;\r\n        box-shadow: 10px 10px 6px 5px #8495E9;\r\n        img {\r\n          @include transform(rotate(180deg));\r\n        }\r\n      }\r\n    }\r\n    .a3{\r\n      &:hover{ // &表示父元素选择器\r\n        background-color:#FC16CA;\r\n        box-shadow: 10px 10px 6px 5px #8495E9;\r\n        img {\r\n          @include transform(rotate(279deg));\r\n        }\r\n      }\r\n    }\r\n    .a4{\r\n      &:hover{ // &表示父元素选择器\r\n        background-color:#FC16CA;\r\n        box-shadow: 10px 10px 6px 5px #8495E9;\r\n        img {\r\n          @include transform(scale(1.2));\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .fieldset {\r\n    margin: 0 100px 20px;\r\n    padding: 20px;\r\n    fieldset {\r\n      padding: 20px;\r\n      margin-bottom: 30px;\r\n      h1 {\r\n        font-size: map-get($headings, h1)\r\n      }\r\n      div {\r\n        @include line;\r\n      }\r\n      p {\r\n        @include opacity(80);\r\n        @include horizontal-line(1px solid #ccc);\r\n      }\r\n    }\r\n    border:1px solid #ccc;\r\n    @include box-shadow(0 2px 2px rgba(0,0,0,.3),0 3px 3px rgba(0,0,0,.3),0 4px 4px rgba(0,0,0,.3));\r\n  }\r\n  .mixin {\r\n    @extend .fieldset;\r\n    .triangle {\r\n      @include triangle(top, 15px, rgb(62, 15, 231))\r\n    }\r\n    .triangle1 {\r\n      @include triangle(right, 15px, rgb(15, 231, 98))\r\n    }\r\n    .triangle2 {\r\n      @include triangle(bottom, 15px, rgb(231, 181, 15))\r\n    }\r\n    .triangle3 {\r\n      @include triangle(left, 15px, rgb(231, 15, 105))\r\n    }\r\n  }\r\n  .extend {\r\n    @extend .fieldset; // 使用选择器的继承，要使用关键词@extend，后面紧跟需要继承的选择器。\r\n    margin-bottom: 30px;\r\n    .select {\r\n      @extend %h1;\r\n      margin: 20px auto;\r\n      padding: 10px;\r\n      @extend %clearfix;\r\n    } \r\n  }\r\n  .function {\r\n    @extend .fieldset;\r\n    p {\r\n      font-size: pxToRem(25px); // 调用pxToRem函数\r\n      background-color: lighten($blue,10%); // lighten减淡\r\n      color:darken($gray,60%);  // darken加深\r\n      border-radius: 10px;\r\n      margin-top: 10px;\r\n      width: get_width(10,true,10px); // 调用pxToRem函数\r\n    }\r\n  }\r\n  .ifAndFor {\r\n    @extend .fieldset;\r\n  }\r\n}\r\n\r\n","body {\r\n  background: #eee;\r\n}\r\n","$lte7: true;\r\n/* 占位选择器%\r\n*如果不调用则不会有任何多余的css文件，避免了以前在一些基础的文件中预定义了很多基础的样式，\r\n*然后实际应用中不管是否使用了@extend去继承相应的样式，都会解析出来所有的样式。\r\n*占位选择器以%标识定义，通过@extend调用。\r\n*/\r\n%h1 {\r\n  border: 4px solid #ff9aa9;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n}\r\n\r\n%clearfix {\r\n  @if $lte7 {\r\n    *zoom: 1;// 属性是IE浏览器的专有属性，Firefox等其它浏览器不支持。它可以设置或检索对象的缩放比例。除此之外，它还有其他一些小作用，比如触发ie的hasLayout属性，清除浮动、清除margin的重叠等。\r\n  }\r\n  &:before,\r\n  &:after {\r\n    content: ''; // content 属性与 :before 及 :after 伪元素配合使用，来插入生成内容。\r\n    display: table; // 此元素会作为块级表格来显示（类似 <table>），表格前后带有换行符。\r\n    font: 0/0 a;// 前面一个零是字体大小．后面一个零是行高;font-family: a; font-size: 0px; line-height: 0;\r\n  }\r\n  &:after {\r\n    clear: both;\r\n  }\r\n}\r\n\r\n","$type: monster;\r\n// @if可一个条件单独使用，也可以和@else结合多条件使用\r\n.if {\r\n  @if $type == ocean {\r\n    color: blue;\r\n  } @else if $type == matador {\r\n    color: red;\r\n  } @else if $type == monster {\r\n    color: green;\r\n  } @else {\r\n    color: black;\r\n  }\r\n}\r\n\r\n// if($condition, $if_true, $if_false) 。三个参数分别表示：条件，条件为真的值，条件为假的值。\r\n.if {\r\n  font-size: if(true, 22px, 2px)\r\n}\r\n\r\n//for循环有两种形式，分别为：@for $i from <start> through <end>和@for $i from <start> to <end>。\r\n//$i表示变量，start表示起始值，end表示结束值，这两个的区别是关键字through表示包括end这个数，而to则不包括end这个数。\r\n.if {\r\n  @for $i from 1 through 3 {\r\n    .item-#{$i} {\r\n      display: inline-block;\r\n      border: solid 2px #3417DB;\r\n      background-color: #DB7617;\r\n      border-radius: 10px;\r\n      margin-top: 10px;\r\n      width: 4.5em * $i;\r\n      height: 40px;\r\n      &:after{\r\n        margin-left: 10px;\r\n        content: 'for循环'; \r\n      }\r\n    }\r\n  }\r\n}\r\n","$lte7: true !default;//是否兼容ie6,7\r\n// 是否支持某个浏览器的前缀，如果你不想支持，可以设置为false\r\n$prefix-for-webkit: true !default;\r\n$prefix-for-mozilla: true !default;\r\n$prefix-for-micorosoft: true !default;\r\n$prefix-for-opera: true !default;\r\n$prefix-for-spec: true !default; // 标准版\r\n/*混合(mixin)\r\n*sass中使用@mixin声明混合，可以传递参数，参数名以$符号开始，多个参数以逗号分开，也可以给参数设置默认值。\r\n*声明的@mixin通过@include来调用。\r\n*/\r\n// 无参mixin（建议传递参数的用@mixin，而非传递参数类的使用继承%）\r\n@mixin line {\r\n  border: solid 2px #9A9A9C;\r\n  margin: 10px auto\r\n}\r\n@mixin center-block {\r\n  margin-left:auto;\r\n  margin-right:auto;\r\n}\r\n@mixin inline-block { \r\n  display: inline-block;\r\n   @if $lte7 { \r\n     *display: inline;\r\n     *zoom:1; \r\n   } \r\n}\r\n// 有参mixin\r\n@mixin opacity($opacity:50) {\r\n  opacity: $opacity / 100;\r\n  filter: alpha(opacity=$opacity);\r\n}\r\n@mixin float($float:left) { \r\n  float: $float; \r\n  @if $lte7 { \r\n    display: inline; \r\n  } \r\n}\r\n// 多个参数mixin\r\n@mixin horizontal-line($border:1px dashed #ccc, $padding:10px){\r\n  border-bottom:$border;\r\n  padding-top:$padding;\r\n  padding-bottom:$padding;  \r\n}\r\n// 多组值参数mixin\r\n@mixin box-shadow($shadow...) {\r\n  -webkit-box-shadow:$shadow;\r\n  box-shadow:$shadow;\r\n}\r\n\r\n// 按常规来说，我们所有的样式都是在@mixin里面定义好的，然后使用的时候@include就拷贝了这段样式，\r\n// 但是@content改变了这一惯例，它其实没有定义样式，它是定义好了选择器，然后@include的时候，就\r\n// 是选择器定了，你写的样式都放在这个选择器里面。\r\n@mixin header {\r\n  .header {\r\n    @content;\r\n  }\r\n}\r\n\r\n// 三角形\r\n@mixin triangle($direction, $size, $borderColor) {\r\n  margin-top: 10px;\r\n  display: inline-block;\r\n  @if $direction == top {\r\n    border-bottom: $size solid $borderColor;\r\n    border-left: $size dashed transparent; // 边框颜色为透明\r\n    border-right: $size dashed transparent;\r\n  }\r\n  @else if $direction == right {\r\n    border-left: $size solid $borderColor;\r\n    border-top: $size dashed transparent;\r\n    border-bottom: $size dashed transparent;\r\n  }\r\n  @else if $direction == bottom {\r\n    border-top: $size solid $borderColor;\r\n    border-left: $size dashed transparent;\r\n    border-right: $size dashed transparent;\r\n  }\r\n  @else if $direction == left {\r\n    border-right: $size solid $borderColor;\r\n    border-top: $size dashed transparent;\r\n    border-bottom: $size dashed transparent;\r\n  }\r\n}\r\n\r\n//webkit moz o 和标准\r\n@mixin transform($value...) {\r\n  @include prefixer(transform, $value, webkit moz o spec); \r\n}\r\n\r\n// CSS3前缀\r\n@mixin prefixer($property, $value, $prefixes) {\r\n  @each $prefix in $prefixes {\r\n    @if $prefix == webkit and $prefix-for-webkit == true {\r\n      -webkit-#{$property}: $value\r\n    }\r\n    @else if $prefix == moz and $prefix-for-mozilla == true {\r\n      -moz-#{$property}: $value\r\n    }\r\n    @else if $prefix == ms and $prefix-for-micorosoft == true {\r\n      -ms-#{$property}: $value\r\n    }\r\n    @else if $prefix == o and $prefix-for-opera == true {\r\n      -o-#{$property}: $value\r\n    }\r\n    @else if $prefix == spec and $prefix-for-spec == true {\r\n      #{$property}: $value\r\n    }\r\n    @else {\r\n      @warn 'Unrecognized prefix: #{$prefix}'\r\n    }\r\n  }\r\n}\r\n","$baseFontSize: 20px !default;\r\n$gray: #858383 !default;\r\n$blue: #1310E6 !default;\r\n\r\n// 函数\r\n// 提醒刚开始sass的话，注意函数是返回一个值，不能直接放到sass里面直接去运行的，\r\n// 会报错。你可以把这些用在判断或者属性值里面.\r\n@function pxToRem($px) {\r\n  @return $px / $baseFontSize * 1rem;\r\n}\r\n\r\n$_columns: 12 !default; // 总列数\r\n$_column-width: 60px !default; // 单列宽度\r\n$_gutter: 20px !default; // 间隔   \r\n\r\n// 960网格布局\r\n@function get_width($columns: $_columns, $onlyInnerWith: true, $_subtract:0){\r\n  // 默认返回值\r\n  $return: ($_column-width + $_gutter) * $columns - $_subtract !default;\r\n\r\n  @if $onlyInnerWith == true {\r\n    // 如果$onlyInnerWith为true，那么减掉一个间隔$_gutter\r\n    $return: ($_column-width + $_gutter) * $columns - $_subtract - $_gutter;\r\n  }\r\n\r\n  @return $return;\r\n}\r\n"]}